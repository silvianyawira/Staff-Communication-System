package LogIn;

import java.awt.Desktop;
import java.awt.EventQueue;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.stage.FileChooser;

public class Bar extends StackPane {
     private final Desktop desktop = Desktop.getDesktop();//get desktop
    public Bar()
    {
        
        final FileChooser fileChooser= new FileChooser();  //the class to getfiles
        SplitPane split=new SplitPane();
        //creating scrollpane
        ScrollPane scroll1=new ScrollPane();
        ScrollPane scroll2=new ScrollPane();
        //adding scrollpane to splitpane
        split.getItems().addAll(scroll1,scroll2);
        Platform.runLater(new Runnable() {
               @Override
               public void run() {
               split.setDividerPositions(0.30f, 0.70f);
                }
            });
        
        GridPane grid=new GridPane();
        TextArea display=new TextArea();
        display.setEditable(false);
        TextField text=new TextField();
        grid.add(display, 0, 0);
        grid.add(text, 0, 0);
        
        /*Button btn=new Button("Edit profile");
                btn.setOnAction(                        //set the file from dektop
                        (javafx.event.ActionEvent e) -> {
                            File file = fileChooser.showOpenDialog(primaryStage);
                            if (file != null) {
                                openFile(file);
                            }
                        });
                /*private void openFile() {
fileDialog.setTitle("Open Resume");
File file = fileDialog.showOpenDialog(primaryStage);
if (file == null) {
return;
}*/
        
        
        Label contactsLbl=new Label("Contacts");
        ComboBox<String> contacts=new ComboBox<>();
        //creating an arraylist of items
        List<String> contactList=new ArrayList<String>();
        contactList.add("DON");
        contactList.add("SLY");
        contactList.add("MERCY");
        contactList.add("REUBEN");
        contactList.add("JULIUS");
        //adding arraylist to the combobox
        contacts.getItems().addAll(contactList);
        contacts.setPromptText("Contacts");
        //contacts.getSelectionModel().selectFirst();
        
        HBox conctactHbox=new HBox(contactsLbl,contacts);
        conctactHbox.setSpacing(20);
        conctactHbox.setPadding(new Insets(20, 20, 20, 20)); 
          
        contacts.valueProperty().addListener(new ChangeListener<String>() {
            @Override 
            public void changed(ObservableValue ov, String t, String t1) {
                if (contacts.getSelectionModel().getSelectedIndex() == 0) {
                        display.setText("you clicked Don");
                }else if(contacts.getSelectionModel().getSelectedIndex() == 1){
                        display.setText("you clicked Sly");
                }
                else if(contacts.getSelectionModel().getSelectedIndex() == 2){
                        display.setText("you clicked Mercy");
                }
                else if(contacts.getSelectionModel().getSelectedIndex() == 3){
                        display.setText("you clicked Reuben");
                }
                else if(contacts.getSelectionModel().getSelectedIndex() == 4){
                        display.setText("you clicked Julius");
                }
                
        }    
    });
        VBox vbox=new VBox(conctactHbox);
    /*contacts.setOnAction((ActionEvent event) -> {
         if(contacts.getSelectionModel().equals(don)){
          display.setText("You clicked Don");
         }
         else if(contacts.equals(sly)){
             display.setText("You clicked sly");
         } else
            display.setText("You clicked others");
             
        });*/
       
        //add padding all around 
        setPadding(new Insets(30, 30, 30, 30)); 
    
        scroll1.setContent(vbox);
        scroll2.setContent(display);
        getChildren().addAll(split);
        
    }
        private void openFile(File file) {              //file method
        EventQueue.invokeLater(() -> {
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(Bar.class.getName()).
                        log(Level.SEVERE, null, ex);
            }
        });
    }
}
